# About Files
# ca.key: Certificate Authority private key file (this shouldn't be shared in real-life)
# ca.crt: Certificate Authority trust certificate 
# server.key: Server private key, password protected (this shouldn't be shared)
# server.csr: Server certificate signing request 
# server.crt: Server certificate signed by the CA 


# Create passfiles to store passphrase
# This will be used to generate certificates [DO NOT SHARE]
echo -n MYRANDOMCAPASSPHRASE > capassfile
echo -n MYRANDOMSERVERCERTPASSPHRASE > serverpassfile

# Changes these CN's to match your hosts in your environment if needed.
SERVER_CN=127.0.0.1

# Step 1: Generate Certificate Authority + Trust Certificate (ca.crt)
openssl genrsa -passout file:capassfile -aes256 -out ca.key 4096
openssl req -new -x509 -days 365 -key ca.key -out ca.crt -subj "/CN=${SERVER_CN}"

# Step 2: Generate the Server Private Key (server.key)
openssl genrsa -passout file:serverpassfile -aes256 -out server.key 4096

# Step 3: Get a certificate signing request from the CA (server.csr)
openssl req -new -key server.key -out server.csr -subj "/CN=${SERVER_CN}"

# Step 4: Sign the certificate with the CA we created (it's called self signing) - server.crt
openssl x509 -req -days 3650 -in server.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out server.crt 
